* faster way to intelligently_set_graph_domain
    * get the mean and sd of prior and likelihood: should be fast because closed form expression
    * get mean +/- 3sd for prior and likelihood. Take the union of these intervals
    * take the union of prior and likelihood supports
    * take the intersection of supports and mean+sd intervals
    * add some buffer
* more efficiently calculate percentiles
    * get extreme percentiles e.g. 10th and 90th.
    * then the next percentiles are known to be in between. will make eqn solver faster.
    * may have to wrap scipy's ppf() to get access to brentq
* refactor
	* https://pypi.org/project/pep8/
    * put normalization inside product pdf class
    * every time cdf is called, store the value in a dict, so that once we found a point where the cdf is ~1, the cdf method can just return 1 without doing integration
* new ways to inputs distributions
	* kernel density estimation
	* fit distribution to quartiles/deciles
	* additional distribution types
* advanced settings
    * move graph domain override into advanced
    allow setting custom percentiles
* form validation
* pass parameters in URL